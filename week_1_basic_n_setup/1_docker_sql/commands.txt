docker build -t test:pandas .

docker run -it test:pandas  2023-01-15

docker run -it \
    -e POSTGRES_USER="root" \
    -e POSTGRES_PASSWORD="root" \
    -e POSTGRES_DB="ny_taxi" \
    -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
    -p 5432:5432 \
  postgres:13

POSTGRES:
pip install pgcli
pip install psycopg_binary
pip install pandas

pgcli --help

pgcli -h localhost -p 5432 -u root -d ny_taxi

JUPYTER:
pip install jupyter
jupyter notebook

# https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet
wget https://github.com/DataTalksClub/nyc-tlc-data/releases/download/yellow/yellow_tripdata_2021-01.csv.gz
gunzip yellow_tripdata_2021-01.csv.gz
https://github.com/DataTalksClub/nyc-tlc-data/releases/tag/misc

pip install sqlalchemy
pip install psycopg2-binary

Setting up pgadmin:
docker run -t \
  -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
  -e PGADMIN_DEFAULT_PASSWORD="root" \
  -p 8080:80 \
  dpage/pgadmin4

## ADD NETWORK
docker network create pg-network

# run postgres with network
docker run -it \
    -e POSTGRES_USER="root" \
    -e POSTGRES_PASSWORD="root" \
    -e POSTGRES_DB="ny_taxi" \
    -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
    -p 5432:5432 \
    --network=pg-network \
    --name pg-database \
  postgres:13

# run pgadmin with network
docker run -t \
  -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
  -e PGADMIN_DEFAULT_PASSWORD="root" \
  -p 8080:80 \
  --network=pg-network \
  --name pgadmin \
  dpage/pgadmin4

jupyter nbconvert --to=script upload_data.ipynb

pip install pyarrow

URL="https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"
URL_ZONES="https://d37ci6vzurychx.cloudfront.net/misc/taxi+_zone_lookup.csv"
python ingest_data.py \
    --user=root \
    --password=root \
    --host=localhost \
    --port=5432 \
    --db=ny_taxi \
    --table_name=yellow_taxi_trips \
    --url=${URL}

docker build -t taxi_ingest:v001 .

docker run -it \
    --network=pg-network \
    taxi_ingest:v001 \
      --user=root \
      --password=root \
      --host=pgdatabase \
      --port=5432 \
      --db=ny_taxi \
      --table_name=yellow_taxi_trips \
      --zones_table_name=zones \
      --url_data=${URL} \
      --url_zones=${URL_ZONES}

docker-compose up
docker-compose down
docker-compose up -d

SQL:
SELECT
   tpep_pickup_datetime
 , tpep_dropoff_datetime
 , total_amount
 , CONCAT(zpu."Borough", ' / ', zpu."Zone") AS pick_up_loc
 , CONCAT(zdo."Borough", ' / ', zpu."Zone") AS dropoff_loc
FROM yellow_taxi_trips t1,
	zones zpu,
	zones zdo
WHERE t1."PULocationID"=zpu."LocationID" AND
	   t1."DOLocationID"=zdo."LocationID"
LIMIT 100;

SELECT
   tpep_pickup_datetime
 , tpep_dropoff_datetime
 , total_amount
 , CONCAT(zpu."Borough", ' / ', zpu."Zone") AS pick_up_loc
 , CONCAT(zdo."Borough", ' / ', zpu."Zone") AS dropoff_loc
FROM yellow_taxi_trips t1
JOIN zones zpu ON t1."PULocationID"=zpu."LocationID"
JOIN zones zdo ON t1."DOLocationID"=zdo."LocationID"
LIMIT 100;

SELECT
   tpep_pickup_datetime
 , tpep_dropoff_datetime
 , total_amount
 , CONCAT(zpu."Borough", ' / ', zpu."Zone") AS pick_up_loc
 , CONCAT(zdo."Borough", ' / ', zpu."Zone") AS dropoff_loc
 , t1."PULocationID"
 , t1."DOLocationID"
FROM yellow_taxi_trips t1
JOIN zones zpu ON t1."PULocationID"=zpu."LocationID"
JOIN zones zdo ON t1."DOLocationID"=zdo."LocationID"
LIMIT 100;


URL="https://d37ci6vzurychx.cloudfront.net/trip-data/green_tripdata_2019-01.parquet"
URL_ZONES="https://d37ci6vzurychx.cloudfront.net/misc/taxi+_zone_lookup.csv"

docker run -it \
    --network=pg-network \
    taxi_ingest:v001 \
      --user=root \
      --password=root \
      --host=pgdatabase \
      --port=5432 \
      --db=ny_taxi \
      --table_name=green_taxi_trips \
      --zones_table_name=zones \
      --url_data=${URL} \
      --url_zones=${URL_ZONES}